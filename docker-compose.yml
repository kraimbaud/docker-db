version: '3'

services:
    database:
        image: postgres:${POSTGRES_VERSION:-15}
        container_name: db-postgres
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
            POSTGRES_USER: ${POSTGRES_USER:-admin}
        volumes:
            - database_data:/var/lib/postgresql/data:rw
        ports:
            - ${POSTGRES_PORT:-5432}:5432

    pgadmin:
        image: dpage/pgadmin4:${PGADMIN_VERSION:-latest}
        container_name: pgadmin
        restart: always
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
        ports:
            - ${PGADMIN_PORT:-8080}:80

    db:
        image: mariadb:${MARIADB_VERSION:-11}
        container_name: db-mariadb
        restart: always
        environment:
            MYSQL_USER: ${MYSQL_USER:-admin}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-admin}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
        volumes:
            - database_data:/var/lib/mysql
        ports:
            - ${MYSQL_PORT:-3306}:3306

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:${PHPMYADMIN_VERSION:-latest}
        container_name: phpmyadmin
        restart: always
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
        ports:
            - ${PHPMYADMIN_PORT:-80}:80

    mongodb:
        image: mongo:${MONGODB_VERSION:-latest}
        container_name: db-mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin}
        volumes:
            - database_data:/data/db
        ports:
            - ${MONGODB_PORT:-27017}:27017

    mongoexpress:
        image: mongo-express:latest
        container_name: mongo-express
        restart: always
        environment:
            ME_CONFIG_MONGODB_SERVER: mongodb
            ME_CONFIG_MONGODB_PORT: 27017
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin}
        ports:
            - ${MONGOEXPRESS_PORT:-8081}:8081

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - ${REDIS_PORT:-6379}:6379
        volumes:
            - database_data:/data
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD:-admin}

    redisinsight:
        image: redislabs/redisinsight:latest
        container_name: redisinsight
        ports:
            - ${REDISINSIGHT_PORT:-8001}:8001
        environment:
            RS_HOSTS: redis:6379

    rabbitmq:
        image: rabbitmq:latest
        container_name: rabbitmq
        ports:
            - ${RABBITMQ_PORT:-5672}:5672
            - ${RABBITMQ_MANAGEMENT_PORT:-15672}:15672
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-guest}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
            RABBITMQ_ENABLED_PLUGINS: rabbitmq_management
    
    elasticsearch:
        image: elasticsearch:${ELASTIC_VERSION:-8.8.1}
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-admin}
            - ELASTIC_USER=${ELASTIC_USER:-admin}
        volumes:
            - database_data:/usr/share/elasticsearch/data
        ports:
            - ${ELASTIC_PORT:-9200}:9200

    kibana:
        image: kibana:${KIBANA_VERSION:-8.8.1}
        container_name: kibana
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - ELASTICSEARCH_USERNAME=${ELASTIC_USER:-admin}
            - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-admin}
        ports:
            - ${KIBANA_PORT:-5601}:5601
        depends_on:
            - elasticsearch

    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        ports:
            - 9443:9443
        volumes:
            - database_data:/data
            - /var/run/docker.sock:/var/run/docker.sock

volumes:
    database_data: {}
